{"version":3,"sources":["components/Evento/Evento.js","components/Loader/Loader.js","components/Modal/Modal.js","containers/Eventos/Eventos.js","containers/Home/Home.js","components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["React","memo","_ref","evento","handleButtonClick","react_default","a","createElement","className","src","imagen","alt","nombre","fecha","entrada","estado","onClick","agendado","console","log","renderButton","href","rel","target","prevProps","nextProps","reservado","Loader","Modal","open","closeModal","confirm","sendingRequest","accion","handleConfirmClick","payload","Object","objectSpread","concat","e","stopPropagation","titulo","components_Loader_Loader","Eventos","API","_useState","useState","_useState2","slicedToArray","eventos","setEventos","_useState3","_useState4","modalOpen","setModalOpen","_useState5","_useState6","eventoSeleccionado","setEventoSeleccionado","_useState7","_useState8","isFetching","setIsFetching","_useState9","_useState10","isSendingRequest","setIsSendingRequest","useEffect","fetch","then","data","json","handleEventClick","map","i","components_Evento_Evento","id","key","components_Modal_Modal","dataEvento","method","body","JSON","stringify","headers","Content-Type","res","response","nuevoArrEventos","catch","error","Home","Fragment","containers_Eventos_Eventos","Header","App","components_Header_Header","containers_Home_Home","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","Notification","requestPermission","result","ready","swReg","reg","pushManager","getSubscription","sub","convertedPublicKey","base64String","padding","repeat","length","base64","replace","rawData","atob","Uint8Array","from","toConsumableArray","char","charCodeAt","urlBase64ToUint8Array","subscribe","userVisibleOnly","applicationServerKey","newSub","Accept","ok","showNotification","err","configurePushSub","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","contentType","get","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9fc4c7d4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Evento.scss\";\r\n\r\nconst Evento = ({ evento, handleButtonClick }) => {\r\n  const renderButton = () => {\r\n    if (evento.estado) {\r\n      return (\r\n        <button\r\n          className=\"btn reservado\"\r\n          onClick={() => handleButtonClick(evento)}\r\n        >\r\n          {evento.estado}\r\n        </button>\r\n      );\r\n    }\r\n    if (evento.agendado) {\r\n      console.log(\"agendado\");\r\n      return (\r\n        <button\r\n          className=\"btn reservado\"\r\n          onClick={() => handleButtonClick(evento)}\r\n        >\r\n          Agendado\r\n        </button>\r\n      );\r\n    }\r\n    switch (evento.entrada) {\r\n      case \"Gratis\":\r\n        return (\r\n          <button className=\"btn\" onClick={() => handleButtonClick(evento)}>\r\n            Reservar\r\n          </button>\r\n        );\r\n      case \"PrÃ³ximamente\":\r\n        return (\r\n          <button className=\"btn\" onClick={() => handleButtonClick(evento)}>\r\n            Agendar\r\n          </button>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <article className=\"Evento\">\r\n      <div className=\"imagen\">\r\n        <img src={evento.imagen} alt={evento.nombre} />\r\n      </div>\r\n      <div className=\"detalles\">\r\n        <h2>{evento.nombre}</h2>\r\n        <p className=\"fecha-lugar\">{evento.fecha}</p>\r\n\r\n        <p>\r\n          Entrada: <span className={evento.entrada}>{evento.entrada}</span>\r\n        </p>\r\n\r\n        <div className=\"botones\">\r\n          {renderButton()}\r\n          <a\r\n            href={evento.href}\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            className=\"btn ver-mas\"\r\n          >\r\n            Ver mÃ¡s\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\nconst compare = (prevProps, nextProps) => {\r\n  return (\r\n    prevProps.evento.reservado === nextProps.evento.reservado &&\r\n    prevProps.evento.estado === nextProps.evento.estado\r\n  );\r\n};\r\nexport default React.memo(Evento, compare);\r\n","import React from \"react\";\r\nimport \"./Loader.scss\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"lds-ring\">\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </div>\r\n  );\r\n};\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport \"./Modal.scss\";\r\n\r\nimport Loader from \"../Loader/Loader\";\r\n\r\nconst Modal = ({ open, closeModal, evento, confirm, sendingRequest }) => {\r\n  let accion = \"\";\r\n  switch (evento.entrada) {\r\n    case \"Gratis\":\r\n      accion = \"reservar\";\r\n      break;\r\n    case \"PrÃ³ximamente\":\r\n      accion = \"agendar\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  const handleConfirmClick = () => {\r\n    let payload = {\r\n      ...evento,\r\n      accion\r\n    };\r\n    confirm(payload);\r\n  };\r\n  const renderButton = () => {\r\n    return evento.estado ? (\r\n      <button className=\"btn reservado\" onClick={handleConfirmClick}>\r\n        {evento.estado}\r\n      </button>\r\n    ) : (\r\n      <button className=\"btn\" onClick={handleConfirmClick}>\r\n        {accion}\r\n      </button>\r\n    );\r\n  };\r\n  return (\r\n    <div className={`backdrop ${open ? \"open\" : \"\"}`} onClick={closeModal}>\r\n      <article className=\"Modal\" onClick={e => e.stopPropagation()}>\r\n        <h2>{evento.nombre}</h2>\r\n        <img src={evento.imagen} alt={evento.titulo} />\r\n        <p>{evento.fecha}</p>\r\n\r\n        {sendingRequest ? <Loader /> : renderButton()}\r\n      </article>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Eventos.scss\";\r\n\r\nimport Evento from \"../../components/Evento/Evento\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\nconst Eventos = () => {\r\n  let API = \"https://cck-server.herokuapp.com/\";\r\n  let [eventos, setEventos] = useState([]);\r\n  let [modalOpen, setModalOpen] = useState(false);\r\n  let [eventoSeleccionado, setEventoSeleccionado] = useState({});\r\n  let [isFetching, setIsFetching] = useState(true);\r\n  let [isSendingRequest, setIsSendingRequest] = useState(false);\r\n\r\n  // Fetch Eventos\r\n  useEffect(() => {\r\n    fetch(API)\r\n      .then(data => data.json())\r\n      .then(eventos => {\r\n        setEventos(eventos);\r\n        setIsFetching(false);\r\n      });\r\n  }, [API]);\r\n\r\n  const handleModalClick = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const handleEventClick = evento => {\r\n    setModalOpen(true);\r\n    setEventoSeleccionado(evento);\r\n  };\r\n\r\n  const handleConfirm = ({ nombre, fecha, id, accion }) => {\r\n    let dataEvento = { nombre, fecha, id };\r\n\r\n    setIsSendingRequest(true);\r\n    fetch(API + \"demo/\" + accion, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ evento: dataEvento }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(response => {\r\n        setIsSendingRequest(false);\r\n        let nuevoArrEventos = eventos.map(evento => {\r\n          return evento.nombre === response.evento.nombre &&\r\n            evento.fecha === response.evento.fecha\r\n            ? { ...evento, estado: response.evento.estado }\r\n            : evento;\r\n        });\r\n        setEventos(nuevoArrEventos);\r\n        setEventoSeleccionado({\r\n          ...eventoSeleccionado,\r\n          estado: response.evento.estado\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error:\", error);\r\n        setIsSendingRequest(false);\r\n      });\r\n  };\r\n  return (\r\n    <article className=\"Eventos\">\r\n      {isFetching ? (\r\n        <div className=\"div-loader\">\r\n          <Loader />\r\n        </div>\r\n      ) : (\r\n        eventos.map((evento, i) => (\r\n          <Evento\r\n            evento={{ ...evento, id: i }}\r\n            key={i}\r\n            handleButtonClick={handleEventClick}\r\n          />\r\n        ))\r\n      )}\r\n      <Modal\r\n        open={modalOpen}\r\n        closeModal={handleModalClick}\r\n        evento={eventoSeleccionado}\r\n        confirm={handleConfirm}\r\n        sendingRequest={isSendingRequest}\r\n      />\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Eventos;\r\n","import React from \"react\";\r\nimport \"./Home.scss\";\r\nimport Eventos from \"../Eventos/Eventos\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <main className=\"Home\">\r\n        <h1>Nuevos Eventos</h1>\r\n        <Eventos />\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./Header.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"Header\">\r\n      <h1>CCK</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport Home from \"./containers/Home/Home\";\r\nimport Header from \"./components/Header/Header\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Home />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  // if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n  if (\"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n\r\n// Notificaciones\r\nif (\"Notification\" in window) {\r\n  Notification.requestPermission(result => {\r\n    if (result === \"granted\") {\r\n      if (\"serviceWorker\" in navigator) {\r\n        navigator.serviceWorker.ready.then(swReg => configurePushSub());\r\n      }\r\n    }\r\n  });\r\n}\r\nfunction urlBase64ToUint8Array(base64String) {\r\n  const padding = \"=\".repeat((4 - (base64String.length % 4)) % 4);\r\n  const base64 = (base64String + padding).replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  const rawData = window.atob(base64);\r\n  return Uint8Array.from([...rawData].map(char => char.charCodeAt(0)));\r\n}\r\n\r\nfunction configurePushSub() {\r\n  if (!(\"serviceWorker\" in navigator)) {\r\n    return;\r\n  }\r\n  let reg;\r\n  navigator.serviceWorker.ready\r\n    .then(swReg => {\r\n      reg = swReg;\r\n      return swReg.pushManager.getSubscription();\r\n    })\r\n    .then(sub => {\r\n      if (sub === null) {\r\n        let publicKey =\r\n          \"BFE7GUyRtAmST40rSrpKGaHO3qYSauvwHp5JJH0P2dsmAuCDJJjiKw1PGnkiom9QtQwhUCVCMVYIq_fVjIhCFVM\";\r\n        let convertedPublicKey = urlBase64ToUint8Array(publicKey);\r\n        return reg.pushManager.subscribe({\r\n          userVisibleOnly: true,\r\n          applicationServerKey: convertedPublicKey\r\n        });\r\n      } else {\r\n      }\r\n    })\r\n    .then(newSub => {\r\n      return fetch(\"https://cck-server.herokuapp.com/subscribir\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        },\r\n        body: JSON.stringify(newSub)\r\n      });\r\n    })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        reg.showNotification(\"Notificaciones habilitadas!\");\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}